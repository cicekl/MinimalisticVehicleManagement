@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model X.PagedList.IPagedList<Project.Service.Models.VehicleMakeViewModel>

@{
    ViewData["Title"] = "Index";
    var currentSort = ViewData["CurrentSort"] as string;
    var currentFilter = ViewData["CurrentFilter"] as string;
    var nameSortParm = String.IsNullOrEmpty(currentSort) ? "name_desc" : "";
    var nameSortIcon = currentSort == "name_desc" ? "▼" : "▲";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@currentFilter" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@nameSortParm" asp-route-searchString="@currentFilter" asp-route-pageNumber="@Model.PageNumber">Name @nameSortIcon</a>
            </th>
            <th>
                Abbreviation
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Abrv)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination-container">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { sortOrder = ViewBag.CurrentSort, searchString = ViewBag.CurrentFilter, pageNumber = page }), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded })
</div>
